#include this file in zabbix_agentd.conf with
#Include=/etc/zabbix/zabbix_conf/zabbix_userparameter.conf

UserParameter=gdi.docker.ps,docker ps --format "table {{.Names}}\t{{.Image}}\t{{.Status}}"
UserParameter=gdi.sicherung.log[*],/home/gisadmin/kvwmap-server/scripte/sicherung/monitor.sh $1 $2 $3
UserParameter=gdi.sslexpirecheck[*],/etc/zabbix/zabbix_conf/scripts/checkssl.sh $1
UserParameter=gdi.foldercheck.sh,/etc/zabbix/zabbix_conf/scripts/foldercheck.sh 
UserParameter=gdi.apache2log_folder.sh,/etc/zabbix/zabbix_conf/scripts/apache2log_folder.sh
UserParameter=gdi.systemctl_docker.sh[*],/etc/zabbix/zabbix_conf/scripts/systemctl_docker.sh
UserParameter=gdi.systemctl_ssh.sh[*],/etc/zabbix/zabbix_conf/scripts/systemctl_ssh.sh
UserParameter=gdi.docker.ps.wc,docker ps -a --format "{{.Names}}" | wc -l
UserParameter=gdi.sicherung.last_daily_log,cat /home/gisadmin/Sicherungen/taeglich/latest/log.json | tr '\n' ' '
UserParameter=gdi.sicherung.du_daily,du -sh /home/gisadmin/Sicherungen/taeglich/*
UserParameter=gdi.snapshot.latest, find /home/gisadmin/Sicherungen/Snapshots/ -mindepth 1 -maxdepth 1 -type d|sort -r|head -n1
UserParameter=gdi.snapshot.lastExitcode, find /home/gisadmin/Sicherungen/Snapshots/ -mindepth 1 -maxdepth 1 -type d|sort -r|head -n1| xargs -i jq '.jobs[].exitcode' {}/joblog.json|sort -r|head -n1
UserParameter=gdi.sicherung.second_tier.monitor_space[*], du -s /data/$1/tagessicherungen/ | cut -f 1
UserParameter=gdi.kvwmapserver.version, docker images | grep kvwmap-server | awk '//{printf "%s:%s\n", $1, $2}' | xargs -i docker ps -a -f ancestor={} --format "{{ .Image }}" | cut -d ':' -f 2
UserParameter=gdi.kvwmapserver.docker_networks, num=$(docker network ls -f name=kvwmap_prod | wc -l); if (test $num -gt 1); then echo "1"; else echo "0"; fi
UserParameter=gdi.cpu_usage, ps -eo pcpu,pid,user,args,pmem | sort -k1 -r | head -10
UserParameter=gdi.host.distro, lsb_release -d | cut -f 2
UserParameter=gdi.migration.done.date, cat /home/gisadmin/postgis_migration/logs/migration.done.date
UserParameter=gdi.kernel.version, uname -r
UserParameter=gdi.kvwmap_git_branch.sh, /etc/zabbix/zabbix_conf/scripts/kvwmap_git_branch.sh
UserParameter=gdi.sicherung.status, latest-status.sh
UserParameter=gdi.sicherung.status.v3, cmdlogger-latest.py /etc/backup/jobs.lst > /dev/null 2>&1; echo $?
UserParameter=gdi.psql.tablespacespize, docker exec kvwmap_prod_pgsql psql kvwmapsp kvwmap -tc "select pg_tablespace_size('pg_default');"|head -n 1|awk '{$1=$1};1'
UserParameter=gdi.docker.pgsql_versions,/etc/zabbix/zabbix_conf/scripts/docker_monitor.sh list-pgsql-versions
UserParameter=gdi.vulnerable.check, /etc/zabbix/zabbix_conf/scripts/vul_check.sh
#postgres
UserParameter=pgsql.discovery,/etc/zabbix/zabbix_conf/scripts/pg_container_discovery.sh
UserParameter=pg.version[*],docker exec $1 psql -U zabbix -t -c "select current from monitor.ccp_postgresql_version;" kvwmapsp
UserParameter=pg.uptime[*],docker exec $1 psql -U zabbix -t -c "select seconds from monitor.ccp_postmaster_uptime;" kvwmapsp
UserParameter=pg.starttime[*],docker exec $1 psql -U zabbix -t -c "select start_time_seconds from monitor.ccp_postmaster_runtime;" kvwmapsp
UserParameter=pg.stat.database_size[*],docker exec $1 psql -U zabbix -t -c "select sum(bytes) from monitor.ccp_database_size where dbname = '${2:-kvwmapsp}';" kvwmapsp
UserParameter=pg.stat.database_size_sum[*],docker exec $1 psql -U zabbix -t -c "select sum(bytes) from monitor.ccp_database_size;" kvwmapsp
#pg connections
UserParameter=pg.stat.connection.total[*],docker exec $1 psql -U zabbix -t -c "select total from monitor.ccp_connection_stats;" kvwmapsp
UserParameter=pg.stat.connection.idle[*],docker exec $1 psql -U zabbix -t -c "select idle from monitor.ccp_connection_stats;" kvwmapsp
UserParameter=pg.stat.connection.idle_in_txn[*],docker exec $1 psql -U zabbix -t -c "select idle_in_txn from monitor.ccp_connection_stats;" kvwmapsp
#pg replication
UserParameter=pg.stat.replication.replay_time[*],docker exec $1 psql -U zabbix -t -c "select replay_time from monitor.ccp_replication_lag;" kvwmapsp
UserParameter=pg.stat.replication.received_time[*],docker exec $1 psql -U zabbix -t -c "select received_time from monitor.ccp_connection_stats;" kvwmapsp
UserParameter=pg.stat.replication.lag_bytes_total[*],docker exec $1 psql -U zabbix -t -c "select sum(bytes) from monitor.ccp_replication_lag_size;" kvwmapsp
#pg locks
UserParameter=pg.stat.locked_tables[*],docker exec $1 psql -U zabbix -t -c "select distinct tablename||': '||mode as tables from monitor.locked_tables order by 1;" kvwmapsp
UserParameter=pg.stat.locked_tables_cnt[*],docker exec $1 psql -U zabbix -t -c "select sum(count) from monitor.ccp_locks;" kvwmapsp
#pg transactions
UserParameter=pg.stat.transactions_total_open[*],docker exec $1 psql -U zabbix -t -c "select total_open_transactions from monitor.transactions;" kvwmapsp
UserParameter=pg.stat.transactions_active[*],docker exec $1 psql -U zabbix -t -c "select active_transactions from monitor.transactions;" kvwmapsp
UserParameter=pg.stat.transactions_idle[*],docker exec $1 psql -U zabbix -t -c "select idle_in_transactions from monitor.transactions;" kvwmapsp
#pg wal
UserParameter=pg.stat.wal_total_bytes[*],docker exec $1 psql -U zabbix -t -c "select total_size_bytes from monitor.zabbix_wal_activity;" kvwmapsp
UserParameter=pg.stat.wal_last_5min_bytes[*],docker exec $1 psql -U zabbix -t -c "select last_5_min_size_bytes from monitor.zabbix_wal_activity;" kvwmapsp
#pg checkpointer
UserParameter=pg.stat.checkpoints_timed[*],docker exec $1 psql -U zabbix -t -c "select num_timed from monitor.ccp_stat_checkpointer;" kvwmapsp
UserParameter=pg.stat.checkpoints_requested[*],docker exec $1 psql -U zabbix -t -c "select num_requested from monitor.ccp_stat_checkpointer;" kvwmapsp
#pg other
UserParameter=pg.stat.cache_hit_ratio[*],docker exec $1 psql -U zabbix -t -c "select ratio from monitor.cache_hit;" kvwmapsp
